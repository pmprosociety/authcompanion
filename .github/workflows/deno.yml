# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.
# For more information see: https://github.com/denolib/setup-deno

name: Deno

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
#    runs-on: ${{ matrix.os }} # runs a test on Ubuntu, Windows and macOS
    runs-on: ubuntu-latest # Service containers only work on ubuntu


    strategy:
      matrix:
        deno: ["v1.x", "nightly"]
#        os: [macOS-latest, windows-latest, ubuntu-latest]

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }} # tests across multiple Deno versions

      - name: Cache Dependencies
        run: deno cache --unstable deps.ts

      - name: Run Migrations
        run: deno run -A https://deno.land/x/nessie/cli.ts -d -c nessie.config.ts migrate

      - name: Run Tests
        run: deno test -A --unstable
        env:
          DBHOSTNAME: 127.0.0.1
          DBPORT: 5432
          DBPASSWORD: postgres
          DATABASE: postgres
          DBUSER: postgres
          ACCESSTOKENKEY: testkeyplzignore
          REFRESHTOKENKEY: testkeyplzignore

